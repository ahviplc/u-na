server:
  port: 5000

spring:
  application:
    name: una-gateway
  cloud:
    nacos:
      username: nacos
      password: nacos
      discovery:
        server-addr: 127.0.0.1:8848 # 192.168.0.6:8848 # docker容器版nacos使用
        service: una-gateway
        namespace: dev
      config:
        server-addr: localhost:8848 # 192.168.0.6:8848 # docker容器版nacos使用
        file-extension: yaml
        # 指定分组
        group: dev
        # 指定命名空间
        namespace: dev
    gateway:
      globalcors:
        # gateway 跨域设置
        cors-configurations:
          '[/**]':
            # allowedOrigins: "*"
            allowedOriginPatterns: "*"
            allowedHeaders: "*"
            allowCredentials: true
            allowedMethods:
              - GET
              - POST
              - PUT
              - OPTIONS
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      routes:
        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: una-provider
          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
          uri: lb://una-provider
          #  Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            - Path=/provider/**
          filters:
            - StripPrefix=1
        - id: una-consumer
          uri: lb://una-consumer
          predicates:
            - Path=/consumer/**
          filters:
            - StripPrefix=1
        - id: una-admin
          uri: lb://una-admin
          predicates:
            - Path=/una-admin/**
          filters:
            - StripPrefix=1

    # 引入熔断器 sentinel
    sentinel:
      transport:
        port: 15000
        dashboard: localhost:8748

  # Spring Cloud Sleuth+zipkin实现链路追踪
  sleuth:
    sampler:
      # 设置采样率默认为 0.1 注意之前的版本是percentage 新版本中更换为 probability
      probability: 1
  zipkin:
    base-url: http://localhost:9411/
    sender:
      type: web
    service:
      name: una-gateway

  # 默认不支持名称相同的bean的覆盖 这里改为 true
  main:
    allow-bean-definition-overriding: true
